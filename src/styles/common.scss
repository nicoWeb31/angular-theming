@use "~@angular/material" as mat;
//custom component
@use "../app/banner/banner.component.scss-theme.scss" as banner;
@use "../app/app.component.scss.theme.scss" as root;
@use "sass:map";

$app-mat-typo: mat.define-typography-config(
  $font-family: "'Festive', cursive",
  $display-4:
    mat.define-typography-level(
      95px,
      95px,
      300,
      "Roboto",
      $letter-spacing: -0.05em
    ),
);

/* For use in src/lib/core/theming/_palette.scss */
$app-err-full: (
  50: #fbe7e7,
  100: #f4c3c3,
  200: #ed9c9c,
  300: #e67474,
  400: #e05656,
  500: #db3838,
  600: #d73232,
  700: #d22b2b,
  800: #cd2424,
  900: #c41717,
  A100: #fff6f6,
  A200: #ffc3c3,
  A400: #ff9090,
  A700: #ff7777,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

$app-success: mat.define-palette(mat.$green-palette);
$app-error: mat.define-palette($app-err-full);
$app-info: mat.define-palette(mat.$blue-palette);

@function apply-extra-colors($theme) {
  @return map.deep-merge(
    $theme,
    (
      color: (
        success: $app-success,
        err: $app-error,
        info: $app-info,
      ),
    )
  );
}

@mixin createTheme($app-theme) {
  // @include mat.angular-material-theme($app-theme);
  @include mat.core-theme($app-theme);
  @include mat.select-theme($app-theme);
  @include mat.toolbar-theme($app-theme);
  @include mat.button-theme($app-theme);
  @include mat.card-theme($app-theme);
  @include mat.form-field-theme($app-theme);
  body {
    @include mat.strong-focus-indicators-theme($app-theme);
  }

  @include banner.app-banner-theme($app-theme);
  @include root.app-root-theme($app-theme);
}
